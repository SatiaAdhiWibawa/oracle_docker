-- RIGHT JOIN
-- SELECT * FROM table1 RIGHT JOIN table2 ON table1.id = table2.id;

-- RIGHT JOIN adalah mekanisme JOIN seperti INNER JOIN,
-- namun semua data di table kedua akan diambil semua, meskipun tidak memiliki relasi di table kedua
-- Jika ada yang tidak memiliki relasi di table pertama, maka hasilnya akan NULL

-- Munculkan semua data di table EMPLOYEES walau tidak ada di table ORDERS
SELECT E.FIRST_NAME, E.LAST_NAME, O.ORDER_ID, O.STATUS
FROM ORDERS O
RIGHT JOIN EMPLOYEES E ON E.EMPLOYEE_ID = O.SALESMAN_ID;
ORDER BY FIRST_NAME, LAST_NAME;


-- MENGGUNAKAN USING
-- Munculkan semua data di table CUSTOMERS walau tidak ada di table ORDERS
SELECT C.NAME, O.ORDER_ID, O.STATUS
FROM ORDERS
RIGHT JOIN CUSTOMERS USING (CUSTOMER_ID)
ORDER BY NAME;


-- MENAMBAHKAN KONDISI WHERE
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, ORDER_ID, STATUS
FROM ORDERS O
RIGHT JOIN EMPLOYEES E ON E.EMPLOYEE_ID = O.SALESMAN_ID
WHERE E.EMPLOYEE_ID = 57;


-- MENGGUNAKAN AND DIDALAM KONDISI JOIN (hasilnya akan berbeda)
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, ORDER_ID, STATUS
FROM ORDERS O
RIGHT JOIN EMPLOYEES E ON E.EMPLOYEE_ID = O.SALESMAN_ID
AND E.EMPLOYEE_ID = 57;


-- RIGHT OUTER JOIN
-- Mengambil data dari table EMPLOYEES yang tidak memiliki relasi di table ORDERS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, ORDER_ID, STATUS
FROM ORDERS O
RIGHT JOIN EMPLOYEES E ON E.EMPLOYEE_ID = O.SALESMAN_ID
WHERE O.ORDER_ID IS NULL;


-- LEFT OUTER JOIN
-- Mengambil data dari table EMPLOYEES yang tidak memiliki relasi di table ORDERS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, ORDER_ID, STATUS
FROM EMPLOYEES E
LEFT JOIN ORDERS O ON E.EMPLOYEE_ID = O.SALESMAN_ID
WHERE O.ORDER_ID IS NULL;